xtabs(~data$survived, sub$pred)
library(epiR)
library(epitools)
library(tidyverse)
data(Titanic)
data = TitanicSurvival
data = na.omit(data)
#####
summary(data)
str(data)
####
mod =glm(survived~ passengerClass + sex + age, family = binomial('logit'), data = data)
summary(mod)
sub = with(data, tibble(passengerClass = passengerClass, sex = sex , age = age))
sub$pred_prob = predict(mod, type = 'response')
sub$pred = ifelse(sub$pred_prob > 0.5,'yes','no')
xtabs(~data$survived, sub$pred)
library(epiR)
library(epitools)
library(tidyverse)
data(Titanic)
data = TitanicSurvival
data = na.omit(data)
#####
summary(data)
str(data)
####
mod =glm(survived~ passengerClass + sex + age, family = binomial('logit'), data = data)
summary(mod)
sub = with(data, tibble(passengerClass = passengerClass, sex = sex , age = age))
sub$pred_prob = predict(mod, type = 'response')
sub$pred = ifelse(sub$pred_prob > 0.5,'1','0')
xtabs(~data$survived, sub$pred)
sub$pred = ifelse(sub$pred_prob > 0.5,'yes','no')
sub$survived = data$survived
sub
xtabs(~sub$survived, sub$pred)
xtabs(~sub$survived+ sub$pred)
mod$residuals
summary(mod)
xtabs(~sub$survived+ sub$pred)
sensitivity <- function(z,a=0,denom,sens ){
#Will return the sensitivity of the matrix
#if a = 1, will return the number of people of true positive
if (a == 1){
return(print(paste0('TP = ',sens*denom)))
}else{ return(z[1,1]/(z[1,1]+z[2,1]))
}
}
specificity <- function(z,a=0,num,spec){  #Returns sensitivity arg is matrix
if (a == 1){
return(print(paste0('TN = ',spec*num))) }else{
return(z[2,2]/(z[1,2]+z[2,2]))
}
}
a = xtabs(~sub$survived+ sub$pred)
specificity(a)
sensitivity(a)
library(epiR)
library(epitools)
library(tidyverse)
data(Titanic)
data = TitanicSurvival
data = na.omit(data)
specificity <- function(z,a=0,denom,sens ){
if (a == 1){
return(print(paste0('TP = ',sens*denom)))
}else{ return(z[1,1]/(z[1,1]+z[2,1]))
}
}
sensitivity <- function(z,a=0,num,spec){
if (a == 1){
return(print(paste0('TN = ',spec*num))) }else{
return(z[2,2]/(z[1,2]+z[2,2]))
}
}
#####
summary(data)
str(data)
####
mod =glm(survived~ passengerClass + sex + age, family = binomial('logit'), data = data)
summary(mod)
sub = with(data, tibble(passengerClass = passengerClass, sex = sex , age = age))
sub$pred_prob = predict(mod, type = 'response')
sub$survived = data$survived
sub$pred = ifelse(sub$pred_prob > 0.5,'yes','no')
a = xtabs(~sub$survived+ sub$pred)
a
sensitivity(a)
specificity(a)
library(lme4)
logLik(mod)
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot()
a
data %>%
ggplot(aes(x = passengerClass, y = survived)) +
geom_bar()
data %>%
ggplot(aes(x = passengerClass)) +
geom_bar()
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar()
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill')
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '')
library(ggthemes)
a
cor(data)
plot(sub$pred_prob)
sort(sub$pred_prob)
plot(sort(sub$pred_prob))
sub %>%
ggplot(aes(x = 1:length(sub$pred_prob, y = pred_prob)))+
geom_point()
sub %>%
ggplot(aes(x = 1:length(sub$pred_prob), y = pred_prob))+
geom_point()
sub %>%
ggplot(aes(x = 1:length(pred_prob), y = pred_prob))+
geom_point()
sub %>%
ggplot(aes(x = 1:length(pred_prob), y = sort(pred_prob)))+
geom_point()
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '')
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill')
data %>%
ggplot(aes(x = passengerClass, fill = survived, color = sex)) +
geom_bar(position = 'fill')
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '')
a
a
summary(mod)
mod_2 = glm(survived ~ passengerClass + sex, data = data, family = binomial('logit'))
summary(mod_2)
lrtest()
library(lmtest)
lrtest(mod,mod_2)
lrtest(mod,mod_2)
a
(99+126) / (520+301)
sub$pred_prob_2 = predict(mod_2, type = 'response')
sub
sub$pred_2 = ifelse(pred_prob_2 > 0.5, 'yes','no')
sub$pred_2 = ifelse(sub$pred_prob_2 > 0.5, 'yes','no')
sub
xtabs(~sub$survived = sub$pred_2)
xtabs(~sub$survived + sub$pred_2)
sensitivity(b)
b = xtabs(~sub$survived + sub$pred_2)
sensitivity(b)
sensitivity(b)
specificity(b)
lrtest(mod,mod_2)
library(ROCit)
sub %>%
ggplot(aes(x = 1:length(pred_prob), y = sort(pred_prob)))+
geom_point()
lrtest(mod,mod_2)
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '')
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill')
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '')
summary(mod)
exp(coefficients(mod))
lrtest(mod,mod_2)
a
data %>%
ggplot(aes(x = age))+
geom_histogram() +
facet_wrap(~passengerClass)
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram() +
facet_wrap(~passengerClass)
data %>%
ggplot(aes(x = age, fill = passengerClass), color = 'black')+
geom_histogram() +
facet_wrap(~passengerClass)
data %>%
ggplot(aes(x = age, fill = passengerClass, color = 'black'))+
geom_histogram() +
facet_wrap(~passengerClass)
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass)
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass) + ggthemes::theme_economist()
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill') + ggthemes::theme_economist()
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '') + ggthemes::theme_economist()
b
a
sub
a
sensitivity(a)
specificity(a)
a
lrtest(mod,mod_2)
a
b
a
b
lrtest(mod,mod_2)
sensitivity(b)
specificity(b)
a
b
mod
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass) + ggthemes::theme_economist()
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill') + ggthemes::theme_economist()
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass) + ggthemes::theme_economist()
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '') + ggthemes::theme_economist()
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass) + ggthemes::theme_economist()
summary(mod)
a
b
sensitivity(a)
sensitivity(a)
specificity(b)
specificity(a)
sub %>%
ggplot(aes(x = 1:length(pred_prob), y = sort(pred_prob)))+
geom_point()
xtabs(~survived + passengerClass , data = data)
c = xtabs(~survived + passengerClas, data = data)
c
chisq.test(c)
c
library(epiR)
library(epitools)
library(tidyverse)
library(lme4)
library(ggthemes)
library(lmtest)
library(ROCit)
data(Titanic)
data = TitanicSurvival
data = na.omit(data) # remove all NAs
specificity <- function(z,a=0,denom,sens ){
if (a == 1){
return(print(paste0('TN = ',sens*denom)))
}else{ return(z[1,1]/(z[1,1]+z[2,1]))
}
}
sensitivity <- function(z,a=0,num,spec){
if (a == 1){
return(print(paste0('TP = ',spec*num))) }else{
return(z[2,2]/(z[1,2]+z[2,2]))
}
}
#### EDA #####
c = xtabs(~survived + passengerClas, data = data)
c
chisq.test(c)
c
c <- xtabs(~survived + passengerClas, data = data)
c
chisq.test(c)
c = xtabs(~survived + passengerClass, data = data)
c
chisq.test(c)
c = xtabs(~survived + passengerClass, data = data)
c
chisq.test(c)
data
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '') + ggthemes::theme_economist()
data  %>%
ggplot(aes(x = passengerClass , y = survived))+
geom_boxplot()
data  %>%
ggplot(aes(x = passengerClass , y = age))+
geom_boxplot()
mod_3 = glm(survived~ sex+age+passengerClass+ age*passengerClass, data = data)
mod_3 = glm(survived~ sex+age+passengerClass+ age*passengerClass, data = data, family = binomial('logit'))
summary(mod_3)
sub$pred_prob_3 = predict(mod_3,type = 'response')
sub
mod_3 = glm(survived~ sex+age+passengerClass+ age*passengerClass, data = data, family = binomial('logit'))
summary(mod_3)
sub$pred_prob_3 = predict(mod_3,type = 'response')
sub$pred_3 = ifelse(sub$pred_prob_3 > 0.5,'yes','no')
sub
xtabs(~survived + pred_3, data = sub)
p = xtabs(~survived + pred_3, data = sub)
p = xtabs(~survived + pred_3, data = sub)
sensitivity(p)
specificity(p)
sensitivity(a)
specificity(b)
lrtest(mod_3, mod)
summary(mod)
summary(model_3)
summary(mod_3)
data %>%
ggplot(aes(x = survived, y = age, fill = passengerClass)) +
geom_boxplot() + labs(title = '') + ggthemes::theme_economist()
data  %>%
ggplot(aes(x = passengerClass , y = age))+
geom_boxplot()
mod_3 = glm(survived~ sex+age+passengerClass+ age*passengerClass, data = data, family = binomial('logit'))
summary(mod_3)
sub$pred_prob_3 = predict(mod_3,type = 'response')
sub$pred_3 = ifelse(sub$pred_prob_3 > 0.5,'yes','no')
p = xtabs(~survived + pred_3, data = sub)
sensitivity(p)
specificity(p)
lrtest(mod_3, mod)
c = xtabs(~survived + passengerClass, data = data)
c
chisq.test(c)
data %>%
ggplot(aes(x = age, fill = passengerClass))+
geom_histogram(color = 'black') +
facet_wrap(~passengerClass) + ggthemes::theme_economist()
data %>%
ggplot(aes(x = passengerClass, fill = survived)) +
geom_bar(position = 'fill') + ggthemes::theme_economist()
p
b
a
sensitivity(a)
specificity(a)
p
sensitivity(p)
specificity(p)
mod = lm(y ~sin(x))
mod = lm(y ~sin())
library(tidyverse)
x = 1:10
mod = lm(y ~sin(x))
x = 1:10
y = sin(x)
y
library(tidyverse)
x = 1:10
y = sin(x)
mod = lm(y ~x)
summary(mod)
plot(mod$fitted.values)
y
library(tidyverse)
x = seq(0,1,0.01)
y = sin(x)
mod = lm(y ~x)
plot(mod$fitted.values)
y
plot(y,x)
plot(x,y)
x = seq(0,10,0.01)
y = sin(x)
mod = lm(y ~x)
plot(mod$fitted.values)
x = seq(0,2,0.01)
y = sin(x)
mod = lm(y ~x)
plot(mod$fitted.values)
library(tidyverse)
x = seq(0,2,0.01)
y = cos(x)
mod = lm(y ~x)
plot(mod$fitted.values)
library(tidyverse)
library(tidyverse)
data("mpg")
data
data = mpg
data
summary(data)
view(data)
str(data)
unique(data$trans)
hist(data$displ)
barplot(data$cyl)
hist(data$cyl)
data %>%
ggplot(aes(x = displ))+
geom_boxplot()
data %>%
ggplot(aes(displ))+
geom_boxplot()
data %>%
ggplot(aes(y = displ))+
geom_boxplot()
data %>%
ggplot(aes(displ))+
geom_boxplot()
unique(data$model)
unique(data$manufacturer)
data
mod = glm(data$cty ~ data$manufacturer)
summary(mod)
mod = glm(data$cty ~ data$manufacturer)
sub = with(data, tibble(cty = data$manufacturer))
sub$pred = predict(mod,sub)
sub
unique(sub$pred)
sub$actual = data$displ
sub
sub$actual = data$cty
sub
xtabs(~pred+actual,data = data)
xtabs(~pred+actual,data = sub)
sub$pred = predict(mod,sub)
sub$actual = data$cty
sub
data %>%
ggplot() +
geom_histogram(aes(attachbase , fill = 'Base'), alpha =0.35) +
geom_histogram(aes(attach1year, fill = 'After 1 year'), alpha = 0.35) +
ggtitle('Attachment lenght histogram. Base and After 1 year')
library(tidyverse)
library(lme4)
library(ggthemes)
# Use a linear mixed model
# Experiemnt is a crossectional study, to know prevalence
# Could build a spagetti plot and a linear mixed model
#### Utility ####
data_file <- function(){
setwd('C:\\Users\\Juan\\Desktop\\project0\\data')
}
r_file <- function(){
setwd('C:\\Users\\Juan\\Desktop\\project0\\R')
}
python_file <- function(){
setwd('C:\\Users\\Juan\\Desktop\\project0\\python')
}
data_file()
data = read_csv('dental_data.csv')
# Should we use an imputer
data = data %>% drop_na()
#### Data Attributes ####
# See structure of the data
str(data)
# Change the atritubes of variables
data$trtgroup = factor(data$trtgroup, levels = c(1:5))
data$sex = factor(data$sex, levels= c(1:5))
data$race = factor(data$race, levels = c(1:5))
data$smoker = factor(data$smoker, levels = c(0:1))
data$sites = factor(data$sites)
str(data)
#### Data Analisys ####
data %>%
group_by(trtgroup) %>%
summarize('count' = n(),
'Mean Attach Base' = mean(attachbase),
'Mean Attach 1 year' = mean(attach1year))
#### Plots #####
data %>%
ggplot(aes(attachbase, fill = trtgroup)) +
geom_histogram(color = 'black')
data %>%
ggplot(aes(attachbase, fill= trtgroup)) +
geom_histogram(color = 'black') +
facet_wrap(~trtgroup)
data %>%
ggplot() +
geom_histogram(aes(attachbase , fill = 'Base'), alpha =0.35) +
geom_histogram(aes(attach1year, fill = 'After 1 year'), alpha = 0.35) +
ggtitle('Attachment lenght histogram. Base and After 1 year')
data
data %>%
group_by(trtgroup) %>%
summarize('count' = n(),
'Mean Attach Base' = mean(attachbase),
'Sd Attach Base' = sd(attachbase),
'Mean Attach 1 year' = mean(attach1year),
'Sd Attach 1 year' = sd(attach1year))
data %>%
group_by(trtgroup) %>%
summarize('count' = n(),
'Mean Attach Base' = mean(attachbase),
'Sd Attach Base' = sd(attachbase),
'Mean Attach 1 year' = mean(attach1year),
'Sd Attach 1 year' = sd(attach1year))
